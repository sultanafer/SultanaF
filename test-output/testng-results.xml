<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="0" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-11-13T21:17:02 EST" name="Suite" finished-at="2022-11-13T21:18:49 EST" duration-ms="107330">
    <groups>
    </groups>
    <test started-at="2022-11-13T21:17:02 EST" name="Test" finished-at="2022-11-13T21:18:49 EST" duration-ms="107330">
      <class name="learnDataProviderWithExcel.CreateLeadWithExcel">
        <test-method is-config="true" signature="login(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:02 EST" name="login" finished-at="2022-11-13T21:17:11 EST" duration-ms="8626" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/control/main]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoSalesManager]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:11 EST" name="CreateLead" data-provider="getData" finished-at="2022-11-13T21:17:13 EST" duration-ms="1573" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at learnDataProviderWithExcel.CreateLeadWithExcel.CreateLead(CreateLeadWithExcel.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateLead -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:13 EST" name="closeBrowser" finished-at="2022-11-13T21:17:29 EST" duration-ms="16325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:29 EST" name="login" finished-at="2022-11-13T21:17:37 EST" duration-ms="7916" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/control/main]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoSalesManager]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:37 EST" name="CreateLead" data-provider="getData" finished-at="2022-11-13T21:17:38 EST" duration-ms="1506" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at learnDataProviderWithExcel.CreateLeadWithExcel.CreateLead(CreateLeadWithExcel.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateLead -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:38 EST" name="closeBrowser" finished-at="2022-11-13T21:17:55 EST" duration-ms="16297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:17:55 EST" name="login" finished-at="2022-11-13T21:18:05 EST" duration-ms="10365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/control/main]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoSalesManager]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:18:05 EST" name="CreateLead" data-provider="getData" finished-at="2022-11-13T21:18:06 EST" duration-ms="1496" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at learnDataProviderWithExcel.CreateLeadWithExcel.CreateLead(CreateLeadWithExcel.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateLead -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:18:06 EST" name="closeBrowser" finished-at="2022-11-13T21:18:23 EST" duration-ms="16299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method is-config="true" signature="login(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:18:23 EST" name="login" finished-at="2022-11-13T21:18:32 EST" duration-ms="8791" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[http://leaftaps.com/opentaps/control/main]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[DemoSalesManager]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[crmsfa]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- login -->
        <test-method signature="CreateLead(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:18:32 EST" name="CreateLead" data-provider="getData" finished-at="2022-11-13T21:18:33 EST" duration-ms="1509" status="FAIL">
          <params>
            <param index="0">
              <value is-null="true"/>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
            <param index="2">
              <value is-null="true"/>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at learnDataProviderWithExcel.CreateLeadWithExcel.CreateLead(CreateLeadWithExcel.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateLead -->
        <test-method is-config="true" signature="closeBrowser()[pri:0, instance:learnDataProviderWithExcel.CreateLeadWithExcel@40cb8df7]" started-at="2022-11-13T21:18:33 EST" name="closeBrowser" finished-at="2022-11-13T21:18:49 EST" duration-ms="16269" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- learnDataProviderWithExcel.CreateLeadWithExcel -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
